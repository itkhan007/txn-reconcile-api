name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [dev, stg, prod]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure AWS Credentials
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

      - name: Terraform Init
        working-directory: terraform/envs/${{ matrix.env }}
        run: terraform init

      - name: Terraform Format
        working-directory: terraform/envs/${{ matrix.env }}
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: terraform/envs/${{ matrix.env }}
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: terraform/envs/${{ matrix.env }}
        run: terraform plan -input=false -out=tfplan

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ matrix.env }}
          path: terraform/envs/${{ matrix.env }}/tfplan

  apply:
    needs: terraform
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [dev, stg, prod]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure AWS Credentials
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

      - name: Terraform Init
        working-directory: terraform/envs/${{ matrix.env }}
        run: terraform init

      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ matrix.env }}
          path: terraform/envs/${{ matrix.env }}

      - name: Terraform Apply
        working-directory: terraform/envs/${{ matrix.env }}
        run: terraform apply -input=false tfplan
